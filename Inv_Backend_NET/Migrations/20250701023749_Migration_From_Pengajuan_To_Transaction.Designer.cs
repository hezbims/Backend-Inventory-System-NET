// <auto-generated />
using System;
using Inventory_Backend_NET.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inventory_Backend_NET.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250701023749_Migration_From_Pengajuan_To_Transaction")]
    partial class Migration_From_Pengajuan_To_Transaction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inventory_Backend_NET.Database.Models.Barang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<int>("CurrentStock")
                        .HasColumnType("int");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("KodeBarang")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("LastMonthStock")
                        .HasColumnType("int");

                    b.Property<int>("MinStock")
                        .HasColumnType("int");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NomorKolom")
                        .HasColumnType("int");

                    b.Property<int>("NomorLaci")
                        .HasColumnType("int");

                    b.Property<int>("NomorRak")
                        .HasColumnType("int");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.Property<string>("Uom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("KodeBarang")
                        .IsUnique();

                    b.HasIndex("Nama")
                        .IsUnique();

                    b.HasIndex("NomorRak", "NomorLaci", "NomorKolom")
                        .IsUnique();

                    b.ToTable("Barangs");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Database.Models.BarangAjuan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BarangId")
                        .HasColumnType("int");

                    b.Property<string>("Keterangan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PengajuanId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BarangId");

                    b.HasIndex("PengajuanId");

                    b.ToTable("BarangAjuans");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Database.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nama")
                        .IsUnique();

                    b.ToTable("Kategoris");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Database.Models.Pengaju", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsPemasok")
                        .HasColumnType("bit");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Nama")
                        .IsUnique();

                    b.ToTable("Pengajus");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Database.Models.Pengajuan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KodeTransaksi")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("PengajuId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<long>("WaktuPengajuan")
                        .HasColumnType("bigint");

                    b.Property<long>("WaktuUpdate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("KodeTransaksi")
                        .IsUnique();

                    b.HasIndex("PengajuId");

                    b.HasIndex("UserId");

                    b.HasIndex("WaktuUpdate", "Id");

                    b.ToTable("Pengajuans");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Database.Models.StatusPengajuan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusPengajuans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = "diterima"
                        },
                        new
                        {
                            Id = 2,
                            Value = "menunggu"
                        },
                        new
                        {
                            Id = 3,
                            Value = "ditolak"
                        });
                });

            modelBuilder.Entity("Inventory_Backend_NET.Database.Models.TotalPengajuanByTanggal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tanggal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TotalPengajuanByTanggals");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Fitur.Pengajuan.Infrastructure.EF.TransactionEf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<int>("Priorities")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TransactionTime")
                        .HasColumnType("bigint");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AssignedUserId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UpdatedAt");

                    b.HasIndex("Priorities", "UpdatedAt");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Fitur.Pengajuan.Infrastructure.EF.TransactionItemEf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExpectedQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("PreparedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionItems");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Database.Models.Barang", b =>
                {
                    b.HasOne("Inventory_Backend_NET.Database.Models.Kategori", "Kategori")
                        .WithMany("Barangs")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Database.Models.BarangAjuan", b =>
                {
                    b.HasOne("Inventory_Backend_NET.Database.Models.Barang", "Barang")
                        .WithMany()
                        .HasForeignKey("BarangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventory_Backend_NET.Database.Models.Pengajuan", "Pengajuan")
                        .WithMany("BarangAjuans")
                        .HasForeignKey("PengajuanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barang");

                    b.Navigation("Pengajuan");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Database.Models.Pengajuan", b =>
                {
                    b.HasOne("Inventory_Backend_NET.Database.Models.Pengaju", "Pengaju")
                        .WithMany()
                        .HasForeignKey("PengajuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Inventory_Backend_NET.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pengaju");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Fitur.Pengajuan.Infrastructure.EF.TransactionEf", b =>
                {
                    b.HasOne("Inventory_Backend_NET.Database.Models.User", "AssignedUser")
                        .WithMany()
                        .HasForeignKey("AssignedUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Inventory_Backend_NET.Database.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Inventory_Backend_NET.Database.Models.Pengaju", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("Creator");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Fitur.Pengajuan.Infrastructure.EF.TransactionItemEf", b =>
                {
                    b.HasOne("Inventory_Backend_NET.Database.Models.Barang", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventory_Backend_NET.Fitur.Pengajuan.Infrastructure.EF.TransactionEf", "Transaction")
                        .WithMany("TransactionItems")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Database.Models.Kategori", b =>
                {
                    b.Navigation("Barangs");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Database.Models.Pengajuan", b =>
                {
                    b.Navigation("BarangAjuans");
                });

            modelBuilder.Entity("Inventory_Backend_NET.Fitur.Pengajuan.Infrastructure.EF.TransactionEf", b =>
                {
                    b.Navigation("TransactionItems");
                });
#pragma warning restore 612, 618
        }
    }
}
